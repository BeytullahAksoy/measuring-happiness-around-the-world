# -*- coding: utf-8 -*-
"""Untitled35.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S4djBKZjwaoiVcaIY_uCCXTE5cTX-89_
"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/senior-project/CNNs/

from keras.models import load_model
import numpy as np
import pandas as pd

data = pd.read_csv('fer2013.csv')

for i in range(len(data)):
  data['pixels'][i] = data['pixels'][i].split(" ")

for i in range(len(data)):
  data['pixels'][i] = [int(x) / 255 for x in data['pixels'][i]]

for i in range(len(data)):
  data['pixels'][i] = " ".join(str(item) for item in data['pixels'][i])

data["Usage"].value_counts()

test_data = data[data.Usage == "PublicTest"]
test_pixels = test_data.pixels.str.split(" ").tolist()

test_pixels = pd.DataFrame(test_pixels, dtype=int)
test_images = test_pixels.values
test_images = test_images.astype(np.float)

print(test_images.shape)

def dense_to_one_hot(labels_dense, num_classes):
  num_labels = labels_dense.shape[0]
  
  index_offset = np.arange(num_labels) * num_classes
  labels_one_hot = np.zeros((num_labels, num_classes))
  labels_one_hot.flat[index_offset + labels_dense.ravel()] = 1
  return labels_one_hot

test_labels_flat = test_data["emotion"].values.ravel()
test_labels_count = np.unique(test_labels_flat).shape[0]

y_test = dense_to_one_hot(test_labels_flat,test_labels_count)
y_test = y_test.astype(np.uint8)

print(y_test.shape)

arr = np.array(image)

arr.shape

model = load_model('Face_Emotion_detection.h5')

x_test = test_images.reshape(-1,48,48,1)

predictions = model.predict(x_test[1000:1010])

predictions

type(predictions[0])

for i in range(len(predictions)):
  max_value = max(predictions[i]) 
  
  

  predictions[i] = np.where(predictions[i]==max_value)[0][0]

predictions